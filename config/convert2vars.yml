logging:
  version: 1
  formatters:
    timestamp:
      format: "\"%(asctime)s\"\t%(message)s"
      datefmt: '%Y/%m/%d %H:%M:%S'
    no_timestamp:
      format: "%(message)s"
    file_fmt:
      format: '%(asctime)s [%(levelname)s] %(name)s %(message)s'
      #datefmt: '%Y/%m/%d %H:%M:%S'
#    fluent_fmt:
#      '()': fluent.handler.FluentRecordFormatter
#      format:
#        level: '%(levelname)s'
#        hostname: '%(hostname)s'
#        where: '%(module)s.%(funcName)s'
  handlers:
    console_timestamp:
      class: logging.StreamHandler
      #level: INFO
      level: DEBUG
      formatter: timestamp
      stream: ext://sys.stdout
    console_no_timestamp:
      class: logging.StreamHandler
      #level: INFO
      level: DEBUG
      formatter: no_timestamp
      stream: ext://sys.stdout
    file:
      class: logging.handlers.TimedRotatingFileHandler
      level: INFO
      formatter: file_fmt
      filename: ./log/convert2vars.log
      when: 'D'
      encoding: utf8
      interval: 1
      backupCount: 90
#    fluent:
#      class: fluent.handler.FluentHandler
#      host: loggerhost
#      port: 24224
#      tag: applog.ps_file
#      buffer_overflow_handler: handler
#      formatter: fluent_fmt
#      level: INFO
  loggers:
    default:
      handlers: [console_timestamp, file]
      level: INFO
      # level: DEBUG
      propagate: False
    '': # root logger
#      handlers: [console, fluent]
      handlers: [console_no_timestamp, file]
      level: INFO
      propagate: False
